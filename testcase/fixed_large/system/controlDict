/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  plus                                  |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

libs            (overset oversetIDFringe);

application     overPimpleDyMFoam;

startFrom       latestTime;

startTime       0;

stopAt          endTime;

endTime         10;

deltaT          0.00025;

//writeControl    timeStep;
//writeInterval   20;

writeControl    runTime;
writeInterval   0.1;

purgeWrite      12;

writeFormat     ascii;

writePrecision  6;

writeCompression off;

timeFormat      general;

timePrecision   6;

runTimeModifiable true;

adjustTimeStep  no;

maxCo           0.5;

functions
{
    fieldAverage
    {
        type            fieldAverage;
        functionObjectLibs ("libfieldFunctionObjects.so");
        enabled         true;
        writeControl   outputTime;

	//writeControl   timeStep;
	//writeInterval  100;

	//cleanRestart true;

	timeStart       1;
	//timeEnd         200;

        fields
        (
            p
            {
                mean        on;
                prime2Mean  on;
                base        time;
            }
            U
            {
                mean        on;
                prime2Mean  on;
                base        time;
            }
        );
    }
    forces
    {
         type forces;
         functionObjectLibs ("libforces.so"); 
         patches (walls); 
         log true; 
         rho rhoInf;
         rhoInf 1000;
         CofR (0 0 0);
         liftDir (0 1 0); 
         dragDir (1 0 0); 
         pitchAxis (0 0 1);
         magUInf 0.0625; 
         lRef 0.12;
         Aref 0.000192; 
         writeControl    timeStep;
         writeInterval   1;
    }
	vorticity
    {
        type        vorticity;
        libs        ("libfieldFunctionObjects.so");
        U		U;
        enabled         true;
        writeControl   outputTime;
	    writeInterval	1;
	    timeStart       0.002;
    }
    forceCoeffs
    {
         type forceCoeffs;
         functionObjectLibs ("libforces.so"); 
         patches (walls); 
         log true; 
         rho rhoInf;
         rhoInf 1000;
         CofR (0 0 0);
         liftDir (0 1 0); 
         dragDir (1 0 0); 
         pitchAxis (0 0 1);
         magUInf 0.0625; 
         lRef 0.12;
         Aref 0.000192; 
         writeControl    timeStep;
         writeInterval   1;
    }

    probes
    {
        type    probes;
        functionObjectLibs  ("libsampling.so");
        probeLocations
        (
            (0.005 0.0 0.0)
        );
        fields
        (
            p 
            U
        );
    }
/*fileUpdate1
{
    type              timeActivatedFileUpdate;
    libs              ("libutilityFunctionObjects.so");
    writeControl      timeStep;
    writeInterval     1;
    fileToUpdate      "<constant>/dynamicMeshDict";
    timeVsFile
    (
        (-1   "<constant>/dynamicMeshDict.fixed")
        (4      "<constant>/dynamicMeshDict.moving")
    );
}*/



//#includeFunc  flowRatePatchoutlet
//#includeFunc  flowRatePatchinlet
//#includeFunc patchAverageinlet
//#includeFunc patchAverageoutlet


}
// ************************************************************************* //
