/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  plus                                  |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

scale   1;

vertices
(
    (-30 -0.05 -20.0)
    (  0 -0.05 -20.0)
    (  0  0.05 -20.0)
    (-30  0.05 -20.0)
    (-30 -0.05   0.0)
    (  0 -0.05   0.0)
    (  0  0.05   0.0)
    (-30  0.05   0.0)
    
    ( 0 -0.05 -20.0)
    ( 30 -0.05 -20.0)
    ( 30  0.05 -20.0)
    ( 0  0.05 -20.0)
    ( 0 -0.05   0.0)
    ( 30 -0.05  0.0)
    ( 30  0.05  0.0)
    ( 0  0.05   0.0)
    
    ( 0 -0.05  0.0)
    ( 30 -0.05  0.0)
    ( 30  0.05  0.0)
    ( 0  0.05   0.0)
    ( 0 -0.05  20.0)
    ( 30 -0.05  20.0)
    ( 30  0.05  20.0)
    ( 0  0.05  20.0)
    
    (-30 -0.05  0.0)
    (  0 -0.05  0.0)
    (  0  0.05  0.0)
    (-30  0.05  0.0)
    (-30 -0.05  20.0)
    (  0 -0.05  20.0)
    (  0  0.05  20.0)
    (-30  0.05  20.0)
);

blocks
(
    hex (0 1 2 3 4 5 6 7)  (60 1 50)  simpleGrading (.20 1 .20)
    hex (8 9 10 11 12 13 14 15)  (60 1 50) simpleGrading (5 1 .20)
    hex (16 17 18 19 20 21 22 23)  (60 1 50)  simpleGrading (5 1 5)
    hex (24 25 26 27 28 29 30 31)  (60 1 50)  simpleGrading (.2 1 5)
);

edges
(
);

boundary
(
    topAndBottom
    {
        type patch;
        faces
        (
            (0 3 2 1)
            (8 11 10 9)
            (20 21 22 23)
            (28 29 30 31)
        );
    }

    inlet
    {
        type patch;
        faces
        (
            (0 4 7 3)
            (24 28 31 27)
        );
    }

    outlet
    {
        type patch;
        faces
        (
            (10 14 13 9)
            (18 22 21 17)
            
        );
    }

    frontAndBack
    {
        type empty;
        faces
        (
            (3 7 6 2)
            (1 5 4 0)
            
            (11 15 14 10)
            (9 13 12 8)
            
            (19 23 22 18)
            (17 21 20 16)
            
            (27 31 30 26)
            (25 29 28 24)
        );
    }
);


// ************************************************************************* //
